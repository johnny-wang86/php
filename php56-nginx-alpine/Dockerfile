FROM alpine:3.4

# dependencies required for running "phpize"
# these get automatically installed and removed by "docker-php-ext-*" (unless they're already installed)
ENV PHPIZE_DEPS \
                autoconf \
                dpkg-dev dpkg \
                file \
                g++ \
                gcc \
                libc-dev \
                make \
                pkgconf \
                re2c

# persistent / runtime deps
RUN apk add --no-cache --virtual .persistent-deps \
	        nginx \
                supervisor \
                ca-certificates \
                curl \
                tar \
                xz \
# https://github.com/docker-library/php/issues/494
                openssl

# ensure www-data user exists
RUN set -x \
        && addgroup -g 500 -S www \
        && adduser -u 500 -D -S -G www www
# 82 is the standard uid/gid for "www-data" in Alpine
# http://git.alpinelinux.org/cgit/aports/tree/main/apache2/apache2.pre-install?h=v3.3.2
# http://git.alpinelinux.org/cgit/aports/tree/main/lighttpd/lighttpd.pre-install?h=v3.3.2
# http://git.alpinelinux.org/cgit/aports/tree/main/nginx-initscripts/nginx-initscripts.pre-install?h=v3.3.2

ENV PHP_INI_DIR /usr/local/etc/php
ENV TIMEZONE Asia/Shanghai

RUN mkdir -p $PHP_INI_DIR/conf.d

##<autogenerated>##
ENV PHP_EXTRA_CONFIGURE_ARGS --enable-fpm --with-fpm-user=www --with-fpm-group=www
##</autogenerated>##

# Apply stack smash protection to functions using local buffers and alloca()
# Make PHP's main executable position-independent (improves ASLR security mechanism, and has no performance impact on x86_64)
# Enable optimization (-O2)
# Enable linker optimization (this sorts the hash buckets to improve cache locality, and is non-default)
# Adds GNU HASH segments to generated executables (this is used if present, and is much faster than sysv hash; in this configuration, sysv hash is also generated)
# https://github.com/docker-library/php/issues/272
ENV PHP_CFLAGS="-fstack-protector-strong -fpic -fpie -O2"
ENV PHP_CPPFLAGS="$PHP_CFLAGS"
ENV PHP_LDFLAGS="-Wl,-O1 -Wl,--hash-style=both -pie"

ENV PHP_VERSION 5.6.36
ENV PHP_URL="https://secure.php.net/get/php-5.6.36.tar.xz/from/this/mirror" PHP_ASC_URL="https://secure.php.net/get/php-5.6.36.tar.xz.asc/from/this/mirror"
ENV PHP_SHA256="18f536bf548e909b4e980379d0c4e56d024b2b1eb1c9768fd169360491f1d6dd" PHP_MD5=""
RUN set -xe; \
        mkdir -p /usr/src; \
        cd /usr/src; \
        wget -O php.tar.xz "$PHP_URL" 
COPY docker-php-source docker-php-ext-* docker-php-entrypoint /usr/local/bin/
RUN set -xe \
        && apk add --no-cache --virtual .build-deps \
                $PHPIZE_DEPS \
                coreutils \
                curl-dev \
                libedit-dev \
                openssl-dev \
                libxml2-dev \
                sqlite-dev \
                libjpeg-turbo-dev \
                libpng-dev \
                freetype-dev \
                gd-dev \
                bzip2-dev \
                libmcrypt-dev \
                gettext-dev \
		libmemcached-dev \
		cyrus-sasl-dev \ 
		tzdata \
        \
        && export CFLAGS="$PHP_CFLAGS" \
                CPPFLAGS="$PHP_CPPFLAGS" \
                LDFLAGS="$PHP_LDFLAGS" \
        && docker-php-source extract \
        && cd /usr/src/php \
        && gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
        && ./configure \
                --build="$gnuArch" \
                --with-config-file-path="$PHP_INI_DIR" \
                --with-config-file-scan-dir="$PHP_INI_DIR/conf.d" \
		--enable-option-checking=fatal \
		--with-mhash \
		--enable-ftp \
		--enable-mbstring \
		--enable-mysqlnd \
		--with-curl \
		--with-libedit \
		--with-openssl \
		--with-zlib \
		--with-mysql \
                --with-mysqli \
                --with-pdo-mysql \
                --with-freetype-dir \
                --with-jpeg-dir \
                --with-png-dir \
                --with-libxml-dir=/usr \
                --enable-xml \
		--enable-mbregex \
                --with-mcrypt \
                --with-gd \
                --enable-gd-native-ttf \
                --enable-zip \
                --enable-soap \
                --with-gettext  \
                --enable-pcntl \
                --enable-sockets \
                --with-xmlrpc \
	        --disable-rpath \
                --enable-bcmath \
                --enable-shmop \
                --enable-sysvsem \
                --enable-inline-optimization \
                $(test "$gnuArch" = 's390x-linux-gnu' && echo '--without-pcre-jit') \
                $PHP_EXTRA_CONFIGURE_ARGS \
        && make -j "$(nproc)" \
        && make install \
        && { find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; } \
        && pecl update-channels \
        && pecl install memcached-2.2.0 memcache-2.2.7 redis-2.2.5 mongo-1.5.8 \
	&& docker-php-ext-enable memcached memcache redis mongo \
        && make clean \
        && cd / \
        && docker-php-source delete \
        \
        && runDeps="$( \
                scanelf --needed --nobanner --format '%n#p' --recursive /usr/local \
                        | tr ',' '\n' \
                        | sort -u \
                        | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
        )" \
        && apk add --no-cache --virtual .php-rundeps $runDeps \
	\
	&& cp /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \
	\
        && apk del .build-deps \
	\
        && rm -rf /tmp/pear ~/.pearrc


ENTRYPOINT ["docker-php-entrypoint"]
##<autogenerated>##
WORKDIR /var/www/html

RUN set -ex \
	&& cd /usr/local/etc \
	&& if [ -d php-fpm.d ]; then \
		# for some reason, upstream's php-fpm.conf.default has "include=NONE/etc/php-fpm.d/*.conf"
		sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null; \
		cp php-fpm.d/www.conf.default php-fpm.d/www.conf; \
	else \
		# PHP 5.x doesn't use "include=" by default, so we'll create our own simple config that mimics PHP 7+ for consistency
		mkdir php-fpm.d; \
		cp php-fpm.conf.default php-fpm.d/www.conf; \
		{ \
			echo '[global]'; \
			echo 'include=etc/php-fpm.d/*.conf'; \
		} | tee php-fpm.conf; \
	fi \
	&& { \
		echo '[global]'; \
		echo 'error_log = /proc/self/fd/2'; \
		echo; \
		echo '[www]'; \
		echo '; if we send this to /proc/self/fd/1, it never appears'; \
		echo 'access.log = /proc/self/fd/2'; \
		echo; \
		echo 'clear_env = no'; \
		echo; \
		echo '; Ensure worker stdout and stderr are sent to the main error log.'; \
		echo 'catch_workers_output = yes'; \
	} | tee php-fpm.d/docker.conf \
	&& { \
		echo '[global]'; \
		echo 'daemonize = no'; \
		echo; \
		echo '[www]'; \
		echo 'listen = 9000'; \
	} | tee php-fpm.d/zz-docker.conf


COPY conf/php/php.ini /usr/local/etc/php/
COPY conf/php/conf.d  /usr/local/etc/php/conf.d
COPY conf/supervisord.conf /etc/supervisord.conf
COPY conf/nginx/ /etc/nginx/

EXPOSE 80

CMD ["/usr/bin/supervisord","-c","/etc/supervisord.conf"]
##</autogenerated>##
